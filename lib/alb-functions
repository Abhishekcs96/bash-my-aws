#!/bin/bash
#
# alb-functions
#
# Application Load Balancer


albs() {

  # List ALBs
  # Accepts Application Load Balancer names or ARNS on STDIN and converts to Application Load Balancer names
  #
  # $ albs
  # ALB-INTERNAL        2019-10-18T06:08:28.470Z  internal         subnet-23123123213,subnet-123123123
  # ALB-EXTERNAL        2019-10-30T15:00:27.290Z  internet-facing  subnet-32323232323,subnet-2323sdsds

  local alb_names=$(__bma_read_inputs | sed 's/arn[a-zA-Z0-9:\-]*loadbalancer\/app\///g' | sed 's/\/.*//g')
  local filters=$(__bma_read_filters $@)

  aws elbv2 describe-load-balancers                                     \
    $([[ -n ${alb_names} ]] && echo --names $alb_names) \
    --query "LoadBalancers[?Type=='application'][
               LoadBalancerName,
               CreatedTime,
               Scheme,
               join(',', AvailabilityZones[].SubnetId)
             ]"          \
    --output text       |
  grep -E -- "$filters" |
  LC_ALL=C sort -k 2    |
  column -s$'\t' -t
}


alb-dnsname(){

  # List DNS Names of ALB(s)
  #
  #      USAGE: alb-dnsname load-balancer [load-balancer]
  #
  # $ albs | alb-dnsname
  # ALB-INTERNAL  internal-ALB-INTERNAL-12323232.eu-central-1.elb.amazonaws.com
  # ALB-EXTERNAL  ALB-EXTERNAL-12323232.eu-central-1.elb.amazonaws.com

  local alb_names=$(__bma_read_inputs | sed 's/arn[a-zA-Z0-9:\-]*loadbalancer\/app\///g' | sed 's/\/.*//g')
  [[ -z "${alb_names}" ]] && __bma_usage "load-balancer [load-balancer]" && return 1

  local alb_name
  for alb_name in $alb_names; do
    aws elbv2 describe-load-balancers    \
      --names "$alb_name" \
      --query "
        LoadBalancers[][
          LoadBalancerName,
          DNSName
        ]"                             \
      --output text                    |
      column -s$'\t' -t
  done
}
